/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Lexicon.View;

import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author Andreas Novian
 */
public class Update extends javax.swing.JFrame {

    private final LexHome home;
    private String root;
    private String component;

    /**
     * Creates new form Create
     *
     * @param home
     * @param root
     * @throws java.io.IOException
     */
    public Update(LexHome home, String root) throws IOException {
        initComponents();
        this.setSize(450, 600);
        this.setLocationRelativeTo(null);
        this.home = home;
        this.root = root;
        this.rootField.setText(root);
        this.component = this.home.lexc.getComponent(root);
        this.componentList.setListData(this.component.split("\n"));
    }

    private Update() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        updateTitleLabel = new javax.swing.JLabel();
        homeButton = new javax.swing.JButton();
        rootLabel = new javax.swing.JLabel();
        componentLabel = new javax.swing.JLabel();
        rootField = new javax.swing.JTextField();
        updateComponentButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        componentList = new javax.swing.JList<>();
        updateRootButton = new javax.swing.JButton();
        deleteComponentButton = new javax.swing.JButton();
        addComponentButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(476, 600));
        setSize(new java.awt.Dimension(476, 600));

        updateTitleLabel.setFont(new java.awt.Font("Constantia", 0, 24)); // NOI18N
        updateTitleLabel.setText("UPDATE");

        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        rootLabel.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        rootLabel.setText("Root :");

        componentLabel.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        componentLabel.setText("Component :");

        rootField.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        rootField.setMinimumSize(new java.awt.Dimension(200, 20));
        rootField.setPreferredSize(new java.awt.Dimension(200, 30));
        rootField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rootFieldActionPerformed(evt);
            }
        });

        updateComponentButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        updateComponentButton.setText("Update");
        updateComponentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateComponentButtonActionPerformed(evt);
            }
        });

        componentList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(componentList);

        updateRootButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        updateRootButton.setText("Update root");
        updateRootButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRootButtonActionPerformed(evt);
            }
        });

        deleteComponentButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        deleteComponentButton.setText("Delete");
        deleteComponentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteComponentButtonActionPerformed(evt);
            }
        });

        addComponentButton.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        addComponentButton.setText("Add");
        addComponentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addComponentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(116, 116, 116)
                        .addComponent(updateTitleLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(componentLabel)
                            .addComponent(rootLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rootField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(updateRootButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addComponentButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(updateComponentButton)
                                .addGap(10, 10, 10)
                                .addComponent(deleteComponentButton))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateTitleLabel)
                    .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rootField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rootLabel)
                    .addComponent(updateRootButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(componentLabel)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteComponentButton)
                    .addComponent(addComponentButton)
                    .addComponent(updateComponentButton))
                .addContainerGap(348, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        this.setVisible(false);
        this.home.setVisible(true);
    }//GEN-LAST:event_homeButtonActionPerformed

    private void rootFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rootFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rootFieldActionPerformed

    private void updateComponentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateComponentButtonActionPerformed
        String selectedComponent, newComponent;
        boolean isComponent = false;
        if (this.componentList.getSelectedIndex() >= 0) {
            selectedComponent = this.componentList.getSelectedValue();
            newComponent = JOptionPane.showInputDialog(this, "Type updated component for " + selectedComponent).toLowerCase();
            String[] searchComponent = this.component.split("\n");
            for (String searchComponent1 : searchComponent) {
                if (searchComponent1.equalsIgnoreCase(newComponent)) {
                    isComponent = true;
                    break;
                }
            }
            if (isComponent) {
                JOptionPane.showMessageDialog(this, "Component already exist");
            } else {
                try {
                    if (newComponent != null && !newComponent.equalsIgnoreCase("")) {
                        this.home.lexc.updateComponent(root, selectedComponent, newComponent);
                        JOptionPane.showMessageDialog(this, "Component " + selectedComponent + " updated to " + newComponent);
                        this.component = this.home.lexc.getComponent(root);
                        this.componentList.setListData(this.component.split("\n"));
                    }
                } catch (IOException ex) {
                    System.out.println(ex.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Click a component to update");
        }

    }//GEN-LAST:event_updateComponentButtonActionPerformed

    private void deleteComponentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteComponentButtonActionPerformed
        int confirm;
        int selectedIndex = this.componentList.getSelectedIndex();
        String selectedText = this.componentList.getSelectedValue();
        if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Click a component to delete");
        } else {
            confirm = JOptionPane.showConfirmDialog(this, "Are you sure to delete component " + selectedText + "?");
            if (confirm == 0) {
                try {
                    this.home.lexc.deleteComponent(root, selectedText);
                    JOptionPane.showMessageDialog(this, "Component " + selectedText + " deleted");
                    this.component = this.home.lexc.getComponent(this.root);
                    this.componentList.setListData(this.component.split("\n"));
                } catch (IOException ex) {
                    System.out.println(ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_deleteComponentButtonActionPerformed

    private void addComponentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addComponentButtonActionPerformed
        String newComponent;
        boolean isComponent = false;
        newComponent = JOptionPane.showInputDialog(this, "Type new component for " + this.root).toLowerCase();
        String[] searchComponent = this.component.split("\n");
        for (String searchComponent1 : searchComponent) {
            if (searchComponent1.equalsIgnoreCase(newComponent)) {
                isComponent = true;
                break;
            }
        }
        if (isComponent) {
            JOptionPane.showMessageDialog(this, "Component already exist");
        } else {
            try {
                this.home.lexc.insertComponent(this.root, newComponent);
                JOptionPane.showMessageDialog(this, "Component " + newComponent + " added");
                this.component = this.home.lexc.getComponent(this.root);
                this.componentList.setListData(this.component.split("\n"));
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_addComponentButtonActionPerformed

    private void updateRootButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRootButtonActionPerformed
        String oldRoot = this.root;
        String newRoot = this.rootField.getText().toLowerCase();
        if (this.home.lexc.searchInTree(newRoot)) {
            JOptionPane.showMessageDialog(this, "Root already exist");
        } else if (!newRoot.equalsIgnoreCase(oldRoot) && !newRoot.equalsIgnoreCase("")) {
            try {
                this.home.lexc.updateRoot(oldRoot, newRoot);
                this.root = newRoot;
                JOptionPane.showMessageDialog(this, "Root " + oldRoot + " updated to " + newRoot);
                this.home.refresh();
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_updateRootButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Update().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addComponentButton;
    private javax.swing.JLabel componentLabel;
    private javax.swing.JList<String> componentList;
    private javax.swing.JButton deleteComponentButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField rootField;
    private javax.swing.JLabel rootLabel;
    private javax.swing.JButton updateComponentButton;
    private javax.swing.JButton updateRootButton;
    private javax.swing.JLabel updateTitleLabel;
    // End of variables declaration//GEN-END:variables
}
