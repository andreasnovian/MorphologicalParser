/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Lexicon.View;

import Lexicon.Model.Lexicon;
import View.ParserHome;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Andreas Novian
 */
public class LexHome extends javax.swing.JFrame {

    public final Lexicon lexc;
    private final ParserHome parser;
    private Create create;
    private Update update;
    private Read read;

    /**
     * Creates new form Home
     *
     * @throws java.io.IOException
     */
    public LexHome() throws IOException {
        initComponents();
        this.setSize(450, 600);
        this.setLocationRelativeTo(null);
        this.lexc = new Lexicon();
        String[] in = lexc.printAllWordInTree().split("\n");
        this.rootsList.setListData(in);

        this.createButton.setVisible(false);
        this.updateButton.setVisible(false);
        this.deleteButton.setVisible(false);

        this.parser = new ParserHome();
    }

    /**
     * Creates new form Home
     *
     * @param parser
     * @throws java.io.IOException
     */
    public LexHome(ParserHome parser) throws IOException {
        initComponents();
        this.setSize(450, 600);
        this.setLocationRelativeTo(null);
        this.lexc = new Lexicon();
        String[] in = lexc.printAllWordInTree().split("\n");
        this.rootsList.setListData(in);

        this.createButton.setVisible(false);
        this.updateButton.setVisible(false);
        this.deleteButton.setVisible(false);

        this.parser = parser;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lexiconTitleLabel = new javax.swing.JLabel();
        createButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        rootsList = new javax.swing.JList<>();
        readButton = new javax.swing.JButton();
        editorCheckBox = new javax.swing.JCheckBox();
        parserButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LEXICON");
        setResizable(false);
        setSize(new java.awt.Dimension(476, 600));

        lexiconTitleLabel.setFont(new java.awt.Font("Constantia", 0, 24)); // NOI18N
        lexiconTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lexiconTitleLabel.setText("LEXICON");

        createButton.setFont(new java.awt.Font("Constantia", 0, 24)); // NOI18N
        createButton.setText("Create");
        createButton.setPreferredSize(new java.awt.Dimension(100, 50));
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Constantia", 0, 24)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.setPreferredSize(new java.awt.Dimension(100, 50));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Constantia", 0, 24)); // NOI18N
        updateButton.setText("Update");
        updateButton.setPreferredSize(new java.awt.Dimension(100, 50));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        rootsList.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        rootsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(rootsList);

        readButton.setFont(new java.awt.Font("Constantia", 0, 24)); // NOI18N
        readButton.setText("Read");
        readButton.setPreferredSize(new java.awt.Dimension(100, 50));
        readButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readButtonActionPerformed(evt);
            }
        });

        editorCheckBox.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        editorCheckBox.setText("Editor Mode");
        editorCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editorCheckBoxActionPerformed(evt);
            }
        });

        parserButton.setFont(new java.awt.Font("Constantia", 0, 14)); // NOI18N
        parserButton.setText("PARSER");
        parserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(createButton, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(readButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(parserButton)
                                .addGap(41, 41, 41)
                                .addComponent(lexiconTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(editorCheckBox))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lexiconTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(parserButton))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(readButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addGap(212, 212, 212)
                .addComponent(editorCheckBox)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        int selectedIndex = this.rootsList.getSelectedIndex();
        String selectedText = this.rootsList.getSelectedValue();
        if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Click a root to update");
        } else {
            this.setVisible(false);
            try {
                this.update = new Update(this, selectedText);
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
            this.update.setVisible(true);
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        this.setVisible(false);
        this.create = new Create(this);
        this.create.setVisible(true);
    }//GEN-LAST:event_createButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int confirm;
        int selectedIndex = this.rootsList.getSelectedIndex();
        String selectedText = this.rootsList.getSelectedValue();
        if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Click a root to delete");
        } else {
            confirm = JOptionPane.showConfirmDialog(this, "Are you sure to delete root " + selectedText + "?");
            if (confirm == 0) {
                try {
                    this.lexc.deleteRoot(selectedText);
                    this.refresh();
                } catch (IOException ex) {
                    System.out.println(ex.getMessage());
                }
                JOptionPane.showMessageDialog(this, "Root " + selectedText + " deleted");
            }
        }

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void readButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readButtonActionPerformed
        int selectedIndex = this.rootsList.getSelectedIndex();
        String selectedText = this.rootsList.getSelectedValue();
        if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Click a root to read");
        } else {
            this.setVisible(false);
            try {
                this.read = new Read(this, selectedText);
            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
            this.read.setVisible(true);
        }
    }//GEN-LAST:event_readButtonActionPerformed

    private void editorCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editorCheckBoxActionPerformed
        if (this.editorCheckBox.isSelected()) {
            this.createButton.setVisible(true);
            this.updateButton.setVisible(true);
            this.deleteButton.setVisible(true);
        } else {
            this.createButton.setVisible(false);
            this.updateButton.setVisible(false);
            this.deleteButton.setVisible(false);
        }
    }//GEN-LAST:event_editorCheckBoxActionPerformed

    private void parserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parserButtonActionPerformed
        this.setVisible(false);
        this.parser.setVisible(true);
    }//GEN-LAST:event_parserButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LexHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LexHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LexHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LexHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new LexHome().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(LexHome.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    public void refresh() {
        String[] in = lexc.printAllWordInTree().split("\n");
        this.rootsList.setListData(in);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JCheckBox editorCheckBox;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lexiconTitleLabel;
    private javax.swing.JButton parserButton;
    private javax.swing.JButton readButton;
    private javax.swing.JList<String> rootsList;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
